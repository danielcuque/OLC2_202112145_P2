// Code generated from SwiftLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SwiftLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SwiftLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func swiftlexerLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "'let'", "'var'", "'func'", "'struct'", "'if'", "'else'",
		"'switch'", "'case'", "'default'", "'for'", "'while'", "'break'", "'continue'",
		"'return'", "'do'", "'Int'", "'Double'", "'Bool'", "'String'", "", "",
		"", "", "", "", "'->'", "'*'", "'/'", "'+'", "'-'", "'%'", "'='", "'*='",
		"'/='", "'+='", "'-='", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='",
		"'&&'", "'||'", "'!'", "'('", "')'", "'{'", "'}'", "'['", "']'", "','",
		"';'", "':'", "'.'",
	}
	staticData.SymbolicNames = []string{
		"", "WHITESPACE", "COMMENT", "BLOCK_COMMENT", "Kw_LET", "Kw_VAR", "Kw_FUNC",
		"Kw_STRUCT", "Kw_IF", "Kw_ELSE", "Kw_SWITCH", "Kw_CASE", "Kw_DEFAULT",
		"Kw_FOR", "Kw_WHILE", "Kw_BREAK", "Kw_CONTINUE", "Kw_RETURN", "Kw_DO",
		"Kw_INT", "Kw_DOUBLE", "Kw_BOOL", "Kw_STRING", "INT", "DOUBLE", "BOOL",
		"STRING", "CHAR", "ID", "Op_ARROW", "Op_MUL", "Op_DIV", "Op_PLUS", "Op_MINUS",
		"Op_MOD", "Op_ASSIGN", "Op_MUL_ASSIGN", "Op_DIV_ASSIGN", "Op_PLUS_ASSIGN",
		"Op_MINUS_ASSIGN", "Op_EQ", "Op_NEQ", "Op_LT", "Op_GT", "Op_LE", "Op_GE",
		"Op_AND", "Op_OR", "Op_NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
		"LBRACKET", "RBRACKET", "COMMA", "SEMICOLON", "COLON", "DOT",
	}
	staticData.RuleNames = []string{
		"WHITESPACE", "COMMENT", "BLOCK_COMMENT", "Kw_LET", "Kw_VAR", "Kw_FUNC",
		"Kw_STRUCT", "Kw_IF", "Kw_ELSE", "Kw_SWITCH", "Kw_CASE", "Kw_DEFAULT",
		"Kw_FOR", "Kw_WHILE", "Kw_BREAK", "Kw_CONTINUE", "Kw_RETURN", "Kw_DO",
		"Kw_INT", "Kw_DOUBLE", "Kw_BOOL", "Kw_STRING", "INT", "DOUBLE", "BOOL",
		"STRING", "CHAR", "ID", "Op_ARROW", "Op_MUL", "Op_DIV", "Op_PLUS", "Op_MINUS",
		"Op_MOD", "Op_ASSIGN", "Op_MUL_ASSIGN", "Op_DIV_ASSIGN", "Op_PLUS_ASSIGN",
		"Op_MINUS_ASSIGN", "Op_EQ", "Op_NEQ", "Op_LT", "Op_GT", "Op_LE", "Op_GE",
		"Op_AND", "Op_OR", "Op_NOT", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
		"LBRACKET", "RBRACKET", "COMMA", "SEMICOLON", "COLON", "DOT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 58, 383, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 1, 0, 4, 0, 119, 8, 0, 11, 0, 12, 0, 120, 1, 0, 1, 0, 1, 1, 1, 1,
		1, 1, 1, 1, 5, 1, 129, 8, 1, 10, 1, 12, 1, 132, 9, 1, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 2, 5, 2, 140, 8, 2, 10, 2, 12, 2, 143, 9, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5,
		1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7,
		1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		22, 4, 22, 257, 8, 22, 11, 22, 12, 22, 258, 1, 23, 5, 23, 262, 8, 23, 10,
		23, 12, 23, 265, 9, 23, 1, 23, 1, 23, 4, 23, 269, 8, 23, 11, 23, 12, 23,
		270, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 3,
		24, 282, 8, 24, 1, 25, 1, 25, 1, 25, 1, 25, 5, 25, 288, 8, 25, 10, 25,
		12, 25, 291, 9, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 5, 26, 299,
		8, 26, 10, 26, 12, 26, 302, 9, 26, 1, 26, 1, 26, 1, 27, 1, 27, 5, 27, 308,
		8, 27, 10, 27, 12, 27, 311, 9, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35,
		1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1,
		38, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42,
		1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 46, 1,
		46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51,
		1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1,
		56, 1, 57, 1, 57, 1, 141, 0, 58, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13,
		7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16,
		33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25,
		51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34,
		69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43,
		87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 52,
		105, 53, 107, 54, 109, 55, 111, 56, 113, 57, 115, 58, 1, 0, 8, 4, 0, 9,
		10, 13, 13, 32, 32, 92, 92, 2, 0, 10, 10, 13, 13, 1, 0, 48, 57, 4, 0, 10,
		10, 13, 13, 34, 34, 92, 92, 3, 0, 10, 10, 13, 13, 92, 92, 4, 0, 10, 10,
		13, 13, 39, 39, 92, 92, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65,
		90, 95, 95, 97, 122, 394, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
		0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0,
		0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1,
		0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0,
		105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0,
		0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 1, 118, 1, 0, 0, 0, 3, 124,
		1, 0, 0, 0, 5, 135, 1, 0, 0, 0, 7, 149, 1, 0, 0, 0, 9, 153, 1, 0, 0, 0,
		11, 157, 1, 0, 0, 0, 13, 162, 1, 0, 0, 0, 15, 169, 1, 0, 0, 0, 17, 172,
		1, 0, 0, 0, 19, 177, 1, 0, 0, 0, 21, 184, 1, 0, 0, 0, 23, 189, 1, 0, 0,
		0, 25, 197, 1, 0, 0, 0, 27, 201, 1, 0, 0, 0, 29, 207, 1, 0, 0, 0, 31, 213,
		1, 0, 0, 0, 33, 222, 1, 0, 0, 0, 35, 229, 1, 0, 0, 0, 37, 232, 1, 0, 0,
		0, 39, 236, 1, 0, 0, 0, 41, 243, 1, 0, 0, 0, 43, 248, 1, 0, 0, 0, 45, 256,
		1, 0, 0, 0, 47, 263, 1, 0, 0, 0, 49, 281, 1, 0, 0, 0, 51, 283, 1, 0, 0,
		0, 53, 294, 1, 0, 0, 0, 55, 305, 1, 0, 0, 0, 57, 312, 1, 0, 0, 0, 59, 315,
		1, 0, 0, 0, 61, 317, 1, 0, 0, 0, 63, 319, 1, 0, 0, 0, 65, 321, 1, 0, 0,
		0, 67, 323, 1, 0, 0, 0, 69, 325, 1, 0, 0, 0, 71, 327, 1, 0, 0, 0, 73, 330,
		1, 0, 0, 0, 75, 333, 1, 0, 0, 0, 77, 336, 1, 0, 0, 0, 79, 339, 1, 0, 0,
		0, 81, 342, 1, 0, 0, 0, 83, 345, 1, 0, 0, 0, 85, 347, 1, 0, 0, 0, 87, 349,
		1, 0, 0, 0, 89, 352, 1, 0, 0, 0, 91, 355, 1, 0, 0, 0, 93, 358, 1, 0, 0,
		0, 95, 361, 1, 0, 0, 0, 97, 363, 1, 0, 0, 0, 99, 365, 1, 0, 0, 0, 101,
		367, 1, 0, 0, 0, 103, 369, 1, 0, 0, 0, 105, 371, 1, 0, 0, 0, 107, 373,
		1, 0, 0, 0, 109, 375, 1, 0, 0, 0, 111, 377, 1, 0, 0, 0, 113, 379, 1, 0,
		0, 0, 115, 381, 1, 0, 0, 0, 117, 119, 7, 0, 0, 0, 118, 117, 1, 0, 0, 0,
		119, 120, 1, 0, 0, 0, 120, 118, 1, 0, 0, 0, 120, 121, 1, 0, 0, 0, 121,
		122, 1, 0, 0, 0, 122, 123, 6, 0, 0, 0, 123, 2, 1, 0, 0, 0, 124, 125, 5,
		47, 0, 0, 125, 126, 5, 47, 0, 0, 126, 130, 1, 0, 0, 0, 127, 129, 8, 1,
		0, 0, 128, 127, 1, 0, 0, 0, 129, 132, 1, 0, 0, 0, 130, 128, 1, 0, 0, 0,
		130, 131, 1, 0, 0, 0, 131, 133, 1, 0, 0, 0, 132, 130, 1, 0, 0, 0, 133,
		134, 6, 1, 0, 0, 134, 4, 1, 0, 0, 0, 135, 136, 5, 47, 0, 0, 136, 137, 5,
		42, 0, 0, 137, 141, 1, 0, 0, 0, 138, 140, 9, 0, 0, 0, 139, 138, 1, 0, 0,
		0, 140, 143, 1, 0, 0, 0, 141, 142, 1, 0, 0, 0, 141, 139, 1, 0, 0, 0, 142,
		144, 1, 0, 0, 0, 143, 141, 1, 0, 0, 0, 144, 145, 5, 42, 0, 0, 145, 146,
		5, 47, 0, 0, 146, 147, 1, 0, 0, 0, 147, 148, 6, 2, 0, 0, 148, 6, 1, 0,
		0, 0, 149, 150, 5, 108, 0, 0, 150, 151, 5, 101, 0, 0, 151, 152, 5, 116,
		0, 0, 152, 8, 1, 0, 0, 0, 153, 154, 5, 118, 0, 0, 154, 155, 5, 97, 0, 0,
		155, 156, 5, 114, 0, 0, 156, 10, 1, 0, 0, 0, 157, 158, 5, 102, 0, 0, 158,
		159, 5, 117, 0, 0, 159, 160, 5, 110, 0, 0, 160, 161, 5, 99, 0, 0, 161,
		12, 1, 0, 0, 0, 162, 163, 5, 115, 0, 0, 163, 164, 5, 116, 0, 0, 164, 165,
		5, 114, 0, 0, 165, 166, 5, 117, 0, 0, 166, 167, 5, 99, 0, 0, 167, 168,
		5, 116, 0, 0, 168, 14, 1, 0, 0, 0, 169, 170, 5, 105, 0, 0, 170, 171, 5,
		102, 0, 0, 171, 16, 1, 0, 0, 0, 172, 173, 5, 101, 0, 0, 173, 174, 5, 108,
		0, 0, 174, 175, 5, 115, 0, 0, 175, 176, 5, 101, 0, 0, 176, 18, 1, 0, 0,
		0, 177, 178, 5, 115, 0, 0, 178, 179, 5, 119, 0, 0, 179, 180, 5, 105, 0,
		0, 180, 181, 5, 116, 0, 0, 181, 182, 5, 99, 0, 0, 182, 183, 5, 104, 0,
		0, 183, 20, 1, 0, 0, 0, 184, 185, 5, 99, 0, 0, 185, 186, 5, 97, 0, 0, 186,
		187, 5, 115, 0, 0, 187, 188, 5, 101, 0, 0, 188, 22, 1, 0, 0, 0, 189, 190,
		5, 100, 0, 0, 190, 191, 5, 101, 0, 0, 191, 192, 5, 102, 0, 0, 192, 193,
		5, 97, 0, 0, 193, 194, 5, 117, 0, 0, 194, 195, 5, 108, 0, 0, 195, 196,
		5, 116, 0, 0, 196, 24, 1, 0, 0, 0, 197, 198, 5, 102, 0, 0, 198, 199, 5,
		111, 0, 0, 199, 200, 5, 114, 0, 0, 200, 26, 1, 0, 0, 0, 201, 202, 5, 119,
		0, 0, 202, 203, 5, 104, 0, 0, 203, 204, 5, 105, 0, 0, 204, 205, 5, 108,
		0, 0, 205, 206, 5, 101, 0, 0, 206, 28, 1, 0, 0, 0, 207, 208, 5, 98, 0,
		0, 208, 209, 5, 114, 0, 0, 209, 210, 5, 101, 0, 0, 210, 211, 5, 97, 0,
		0, 211, 212, 5, 107, 0, 0, 212, 30, 1, 0, 0, 0, 213, 214, 5, 99, 0, 0,
		214, 215, 5, 111, 0, 0, 215, 216, 5, 110, 0, 0, 216, 217, 5, 116, 0, 0,
		217, 218, 5, 105, 0, 0, 218, 219, 5, 110, 0, 0, 219, 220, 5, 117, 0, 0,
		220, 221, 5, 101, 0, 0, 221, 32, 1, 0, 0, 0, 222, 223, 5, 114, 0, 0, 223,
		224, 5, 101, 0, 0, 224, 225, 5, 116, 0, 0, 225, 226, 5, 117, 0, 0, 226,
		227, 5, 114, 0, 0, 227, 228, 5, 110, 0, 0, 228, 34, 1, 0, 0, 0, 229, 230,
		5, 100, 0, 0, 230, 231, 5, 111, 0, 0, 231, 36, 1, 0, 0, 0, 232, 233, 5,
		73, 0, 0, 233, 234, 5, 110, 0, 0, 234, 235, 5, 116, 0, 0, 235, 38, 1, 0,
		0, 0, 236, 237, 5, 68, 0, 0, 237, 238, 5, 111, 0, 0, 238, 239, 5, 117,
		0, 0, 239, 240, 5, 98, 0, 0, 240, 241, 5, 108, 0, 0, 241, 242, 5, 101,
		0, 0, 242, 40, 1, 0, 0, 0, 243, 244, 5, 66, 0, 0, 244, 245, 5, 111, 0,
		0, 245, 246, 5, 111, 0, 0, 246, 247, 5, 108, 0, 0, 247, 42, 1, 0, 0, 0,
		248, 249, 5, 83, 0, 0, 249, 250, 5, 116, 0, 0, 250, 251, 5, 114, 0, 0,
		251, 252, 5, 105, 0, 0, 252, 253, 5, 110, 0, 0, 253, 254, 5, 103, 0, 0,
		254, 44, 1, 0, 0, 0, 255, 257, 7, 2, 0, 0, 256, 255, 1, 0, 0, 0, 257, 258,
		1, 0, 0, 0, 258, 256, 1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259, 46, 1, 0,
		0, 0, 260, 262, 7, 2, 0, 0, 261, 260, 1, 0, 0, 0, 262, 265, 1, 0, 0, 0,
		263, 261, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 266, 1, 0, 0, 0, 265,
		263, 1, 0, 0, 0, 266, 268, 5, 46, 0, 0, 267, 269, 7, 2, 0, 0, 268, 267,
		1, 0, 0, 0, 269, 270, 1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 270, 271, 1, 0,
		0, 0, 271, 48, 1, 0, 0, 0, 272, 273, 5, 116, 0, 0, 273, 274, 5, 114, 0,
		0, 274, 275, 5, 117, 0, 0, 275, 282, 5, 101, 0, 0, 276, 277, 5, 102, 0,
		0, 277, 278, 5, 97, 0, 0, 278, 279, 5, 108, 0, 0, 279, 280, 5, 115, 0,
		0, 280, 282, 5, 101, 0, 0, 281, 272, 1, 0, 0, 0, 281, 276, 1, 0, 0, 0,
		282, 50, 1, 0, 0, 0, 283, 289, 5, 34, 0, 0, 284, 288, 8, 3, 0, 0, 285,
		286, 5, 92, 0, 0, 286, 288, 7, 4, 0, 0, 287, 284, 1, 0, 0, 0, 287, 285,
		1, 0, 0, 0, 288, 291, 1, 0, 0, 0, 289, 287, 1, 0, 0, 0, 289, 290, 1, 0,
		0, 0, 290, 292, 1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 292, 293, 5, 34, 0, 0,
		293, 52, 1, 0, 0, 0, 294, 300, 5, 39, 0, 0, 295, 299, 8, 5, 0, 0, 296,
		297, 5, 92, 0, 0, 297, 299, 7, 4, 0, 0, 298, 295, 1, 0, 0, 0, 298, 296,
		1, 0, 0, 0, 299, 302, 1, 0, 0, 0, 300, 298, 1, 0, 0, 0, 300, 301, 1, 0,
		0, 0, 301, 303, 1, 0, 0, 0, 302, 300, 1, 0, 0, 0, 303, 304, 5, 39, 0, 0,
		304, 54, 1, 0, 0, 0, 305, 309, 7, 6, 0, 0, 306, 308, 7, 7, 0, 0, 307, 306,
		1, 0, 0, 0, 308, 311, 1, 0, 0, 0, 309, 307, 1, 0, 0, 0, 309, 310, 1, 0,
		0, 0, 310, 56, 1, 0, 0, 0, 311, 309, 1, 0, 0, 0, 312, 313, 5, 45, 0, 0,
		313, 314, 5, 62, 0, 0, 314, 58, 1, 0, 0, 0, 315, 316, 5, 42, 0, 0, 316,
		60, 1, 0, 0, 0, 317, 318, 5, 47, 0, 0, 318, 62, 1, 0, 0, 0, 319, 320, 5,
		43, 0, 0, 320, 64, 1, 0, 0, 0, 321, 322, 5, 45, 0, 0, 322, 66, 1, 0, 0,
		0, 323, 324, 5, 37, 0, 0, 324, 68, 1, 0, 0, 0, 325, 326, 5, 61, 0, 0, 326,
		70, 1, 0, 0, 0, 327, 328, 5, 42, 0, 0, 328, 329, 5, 61, 0, 0, 329, 72,
		1, 0, 0, 0, 330, 331, 5, 47, 0, 0, 331, 332, 5, 61, 0, 0, 332, 74, 1, 0,
		0, 0, 333, 334, 5, 43, 0, 0, 334, 335, 5, 61, 0, 0, 335, 76, 1, 0, 0, 0,
		336, 337, 5, 45, 0, 0, 337, 338, 5, 61, 0, 0, 338, 78, 1, 0, 0, 0, 339,
		340, 5, 61, 0, 0, 340, 341, 5, 61, 0, 0, 341, 80, 1, 0, 0, 0, 342, 343,
		5, 33, 0, 0, 343, 344, 5, 61, 0, 0, 344, 82, 1, 0, 0, 0, 345, 346, 5, 60,
		0, 0, 346, 84, 1, 0, 0, 0, 347, 348, 5, 62, 0, 0, 348, 86, 1, 0, 0, 0,
		349, 350, 5, 60, 0, 0, 350, 351, 5, 61, 0, 0, 351, 88, 1, 0, 0, 0, 352,
		353, 5, 62, 0, 0, 353, 354, 5, 61, 0, 0, 354, 90, 1, 0, 0, 0, 355, 356,
		5, 38, 0, 0, 356, 357, 5, 38, 0, 0, 357, 92, 1, 0, 0, 0, 358, 359, 5, 124,
		0, 0, 359, 360, 5, 124, 0, 0, 360, 94, 1, 0, 0, 0, 361, 362, 5, 33, 0,
		0, 362, 96, 1, 0, 0, 0, 363, 364, 5, 40, 0, 0, 364, 98, 1, 0, 0, 0, 365,
		366, 5, 41, 0, 0, 366, 100, 1, 0, 0, 0, 367, 368, 5, 123, 0, 0, 368, 102,
		1, 0, 0, 0, 369, 370, 5, 125, 0, 0, 370, 104, 1, 0, 0, 0, 371, 372, 5,
		91, 0, 0, 372, 106, 1, 0, 0, 0, 373, 374, 5, 93, 0, 0, 374, 108, 1, 0,
		0, 0, 375, 376, 5, 44, 0, 0, 376, 110, 1, 0, 0, 0, 377, 378, 5, 59, 0,
		0, 378, 112, 1, 0, 0, 0, 379, 380, 5, 58, 0, 0, 380, 114, 1, 0, 0, 0, 381,
		382, 5, 46, 0, 0, 382, 116, 1, 0, 0, 0, 13, 0, 120, 130, 141, 258, 263,
		270, 281, 287, 289, 298, 300, 309, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SwiftLexerInit initializes any static state used to implement SwiftLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSwiftLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SwiftLexerInit() {
	staticData := &SwiftLexerLexerStaticData
	staticData.once.Do(swiftlexerLexerInit)
}

// NewSwiftLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSwiftLexer(input antlr.CharStream) *SwiftLexer {
	SwiftLexerInit()
	l := new(SwiftLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SwiftLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SwiftLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SwiftLexer tokens.
const (
	SwiftLexerWHITESPACE      = 1
	SwiftLexerCOMMENT         = 2
	SwiftLexerBLOCK_COMMENT   = 3
	SwiftLexerKw_LET          = 4
	SwiftLexerKw_VAR          = 5
	SwiftLexerKw_FUNC         = 6
	SwiftLexerKw_STRUCT       = 7
	SwiftLexerKw_IF           = 8
	SwiftLexerKw_ELSE         = 9
	SwiftLexerKw_SWITCH       = 10
	SwiftLexerKw_CASE         = 11
	SwiftLexerKw_DEFAULT      = 12
	SwiftLexerKw_FOR          = 13
	SwiftLexerKw_WHILE        = 14
	SwiftLexerKw_BREAK        = 15
	SwiftLexerKw_CONTINUE     = 16
	SwiftLexerKw_RETURN       = 17
	SwiftLexerKw_DO           = 18
	SwiftLexerKw_INT          = 19
	SwiftLexerKw_DOUBLE       = 20
	SwiftLexerKw_BOOL         = 21
	SwiftLexerKw_STRING       = 22
	SwiftLexerINT             = 23
	SwiftLexerDOUBLE          = 24
	SwiftLexerBOOL            = 25
	SwiftLexerSTRING          = 26
	SwiftLexerCHAR            = 27
	SwiftLexerID              = 28
	SwiftLexerOp_ARROW        = 29
	SwiftLexerOp_MUL          = 30
	SwiftLexerOp_DIV          = 31
	SwiftLexerOp_PLUS         = 32
	SwiftLexerOp_MINUS        = 33
	SwiftLexerOp_MOD          = 34
	SwiftLexerOp_ASSIGN       = 35
	SwiftLexerOp_MUL_ASSIGN   = 36
	SwiftLexerOp_DIV_ASSIGN   = 37
	SwiftLexerOp_PLUS_ASSIGN  = 38
	SwiftLexerOp_MINUS_ASSIGN = 39
	SwiftLexerOp_EQ           = 40
	SwiftLexerOp_NEQ          = 41
	SwiftLexerOp_LT           = 42
	SwiftLexerOp_GT           = 43
	SwiftLexerOp_LE           = 44
	SwiftLexerOp_GE           = 45
	SwiftLexerOp_AND          = 46
	SwiftLexerOp_OR           = 47
	SwiftLexerOp_NOT          = 48
	SwiftLexerLPAREN          = 49
	SwiftLexerRPAREN          = 50
	SwiftLexerLBRACE          = 51
	SwiftLexerRBRACE          = 52
	SwiftLexerLBRACKET        = 53
	SwiftLexerRBRACKET        = 54
	SwiftLexerCOMMA           = 55
	SwiftLexerSEMICOLON       = 56
	SwiftLexerCOLON           = 57
	SwiftLexerDOT             = 58
)
